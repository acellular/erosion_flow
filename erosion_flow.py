# -*- coding: utf-8 -*-

"""
/***************************************************************************
ErosionFlow
 A QGIS plugin with QGIS : 32214
 Provides Basic erosion processing algorithms, such as RUSLE AND USPED
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2023-03-28
        copyright            : (C) 2023 by Michael Tuck
        email                : contact@michaeltuck.com
        MIT LICENCE                                                         
 ***************************************************************************/
"""

__author__ = 'Michael Tuck'
__date__ = '2023-03-28'
__copyright__ = '(C) 2023 by Michael Tuck'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
import sys
import inspect

from qgis.core import QgsProcessingAlgorithm, QgsApplication
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction
from qgis.utils import iface
import processing

# Algorithm inports
from .erosion_flow_provider import ErosionFlowProvider

# Initialize Qt resources from file resources.py
from .resources import *
#import resources #needed to show icon in toolbar apparently

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)


class ErosionFlowPlugin(object):

    def __init__(self):
        self.provider = None

        # Save reference to the QGIS interface
        self.iface = iface

    def initProcessing(self):
        """Init Processing provider for QGIS >= 3.8."""
        self.provider = ErosionFlowProvider()
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
        # Create a new action for running the plugin
        self.LSArea = QAction(QIcon(':/plugins/erosion_flow/lsarea_icon.png'), "ErosionFlow::LS Area", self.iface.mainWindow())
        self.RUSLE = QAction(QIcon(':/plugins/erosion_flow/RUSLE_icon.png'), "ErosionFlow::RUSLE", self.iface.mainWindow())
        self.USPED = QAction(QIcon(':/plugins/erosion_flow/USPED_icon.png'), "ErosionFlow::USPED", self.iface.mainWindow())
        self.LSArea.triggered.connect(self.run_LSArea)
        self.RUSLE.triggered.connect(self.run_RUSLE)
        self.USPED.triggered.connect(self.run_USPED)

        # Add the action to the toolbar
        self.iface.addToolBarIcon(self.LSArea)
        self.iface.addToolBarIcon(self.RUSLE)
        self.iface.addToolBarIcon(self.USPED)

        self.initProcessing()

    def run_LSArea(self):
        processing.execAlgorithmDialog('ErosionFlow:LSArea')

    def run_RUSLE(self):
        processing.execAlgorithmDialog('ErosionFlow:RUSLE')

    def run_USPED(self):
        processing.execAlgorithmDialog('ErosionFlow:USPED')

    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)


# create action that will start plugin configuration
   #  self.action = QAction(QIcon(":/plugins/dem_to_dtm/icon.png"), "Test plugin")
   #  self.action.setWhatsThis("Configuration for test plugin")
   #  self.action.setStatusTip("This is status tip")
   #  self.action.triggered.connect(DEMtoDTMProvider.createInstance())

   #  # add toolbar button and menu item
   #  self.iface.addToolBarIcon(self.action)
   #  self.iface.addPluginToMenu("&Test plugins", self.action)